{"mappings":"YAAA,aAEA,IAAMA,EAAeC,SAASC,kBAAkB,SAC1CC,EAAcF,SAASC,kBAAkB,QACzCE,EAAgBH,SAASC,kBAAkB,UAyBjD,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAqBtC,OAnBmB,IAAIC,SAAQ,SAACC,EAASC,GACvCC,YAAW,WACLN,EAMNI,EAJc,CAChBN,SAASA,EACTC,MAAMA,IASAM,EAJe,CACbP,SAASA,EACTC,MAAMA,G,GAIVA,E,IA5CON,SAASc,cAAc,SAI/BC,iBAAiB,UAAS,SAACC,GAC9BA,EAAMC,iBAMN,IAJA,IAAMC,EAASC,OAAOhB,EAAc,GAAGiB,OACjCC,EAAOF,OAAOjB,EAAY,GAAGkB,OAC7BE,EAAQH,OAAOpB,EAAa,GAAGqB,OAE5BG,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAGhCnB,EAFiBmB,EACID,GAASC,EAAE,GAAKF,GAElCG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,QAAQC,IAAI,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,QAAQC,IAAI,sBAAuCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,QA8BjEF,EAAc,EAAG,MACdoB,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,QAAQC,IAAI,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,QAAQC,IAAI,sBAAqCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict'\n\nconst delayPromise = document.getElementsByName('delay');\nconst stepPromise = document.getElementsByName('step');\nconst amountPromise = document.getElementsByName('amount');\nconst form = document.querySelector('.form')\n\n\n\nform.addEventListener('submit',(event) => {\n  event.preventDefault();\n\n  const amount = Number(amountPromise[0].value);\n  const step = Number(stepPromise[0].value);\n  const delay = Number(delayPromise[0].value);\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const delayPromise = delay + (i-1) * step;\n    createPromise(position, delayPromise)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promisFunc = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\nconst acceptRes = {\n  position:position,\n  delay:delay\n}\n    resolve(acceptRes)\n      } else {\n        // Reject\n        const errRej = {\n          position:position,\n          delay:delay\n        }\n        reject(errRej)\n      }\n    },delay)\n  })\n  return promisFunc\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$ce04d3a99e08e73b$var$delayPromise","document","getElementsByName","$ce04d3a99e08e73b$var$stepPromise","$ce04d3a99e08e73b$var$amountPromise","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","querySelector","addEventListener","event","preventDefault","amount","Number","value","step","delay1","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.d87ea829.js.map"}